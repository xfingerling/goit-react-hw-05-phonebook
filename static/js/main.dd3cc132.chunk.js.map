{"version":3,"sources":["transitions/popTransition.module.css","components/ContactForm/ContactForm.module.css","components/Phonebook/Phonebook.module.css","transitions/logoTransition.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/DeleteBtn/DeleteBtn.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/DeleteBtn/DeleteBtn.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/Phonebook/Phonebook.jsx","index.jsx"],"names":["module","exports","initialState","name","number","ContactForm","state","handleSubmit","e","preventDefault","props","onAddContact","setState","handleChange","target","value","this","onSubmit","className","styles","form","input","type","onChange","placeholder","autoComplete","btn","disabled","Component","DeleteBtn","onDelete","onClick","ContactListItem","listItem","ContactList","contacts","listItems","map","id","CSSTransition","key","timeout","classNames","popTransition","unmountOnExit","TransitionGroup","component","list","Filter","onFilter","isShow","in","Notification","text","style","alert","Phonebook","filter","isAlertShow","isLogoShow","isUniqueName","some","el","contact","newContact","uniqid","setTimeout","handleFilter","handleDelete","filterContactsByName","filtred","toLowerCase","includes","sortContactsAlphabetically","sort","a","b","contactsLS","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filtredContacts","sortedContacts","logoWrap","logoTransition","logo","title","length","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd3cc132.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"popTransition_enter__Z8uGf\",\"enterActive\":\"popTransition_enterActive__3cFub\",\"exit\":\"popTransition_exit__9Nyfg\",\"exitActive\":\"popTransition_exitActive__1nA81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3IVLV\",\"input\":\"ContactForm_input__3KTqF\",\"btn\":\"ContactForm_btn__1C0zJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrap\":\"Phonebook_logoWrap__11h-e\",\"logo\":\"Phonebook_logo__1DBQE\",\"title\":\"Phonebook_title__2PuiD Phonebook_logoWrap__11h-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logoTransition_enter__3hsnB\",\"enterActive\":\"logoTransition_enterActive__pSxBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1_-th\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__2tvAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"DeleteBtn_btn__1lET9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__TiudA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__1EmE-\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst initialState = { name: \"\", number: \"\" };\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const name = target.name;\r\n    let value = target.value;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <input\r\n          className={styles.input}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Name\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          className={styles.input}\r\n          name=\"number\"\r\n          type=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Number\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <button\r\n          className={styles.btn}\r\n          type=\"submit\"\r\n          disabled={!name || !number}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./DeleteBtn.module.css\";\r\n\r\nconst DeleteBtn = ({ onDelete }) => {\r\n  return (\r\n    <button className={styles.btn} onClick={onDelete}>\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\n\r\nDeleteBtn.propTypes = {\r\n  id: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => (\r\n  <li className={styles.listItem}>\r\n    {name}: {number}\r\n    <DeleteBtn onDelete={onDelete} />\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts = [], onDelete }) => {\r\n  const listItems = contacts.map(({ id, name, number }) => {\r\n    return (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        classNames={popTransition}\r\n        unmountOnExit\r\n      >\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDelete(id)}\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {listItems}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nconst Filter = ({ value, onFilter, isShow }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={isShow}\r\n      timeout={250}\r\n      classNames={popTransition}\r\n      unmountOnExit\r\n    >\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={onFilter}\r\n        value={value}\r\n        placeholder=\"Find contact by name\"\r\n      />\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n  value: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport style from \"./Notification.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nconst Notification = ({ text, isShow }) => (\r\n  <CSSTransition\r\n    in={isShow}\r\n    timeout={250}\r\n    classNames={popTransition}\r\n    unmountOnExit\r\n  >\r\n    <div className={style.alert}>\r\n      <p>{text}</p>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport uniqid from \"uniqid\";\r\n\r\nimport style from \"./Phonebook.module.css\";\r\nimport logoTransition from \"../../transitions/logoTransition.module.css\";\r\n\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n    isAlertShow: false,\r\n    isLogoShow: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState((state) => ({ isLogoShow: !state.isLogoShow }));\r\n    const contactsLS = localStorage.getItem(\"contacts\");\r\n\r\n    if (contactsLS) {\r\n      const contacts = JSON.parse(contactsLS);\r\n\r\n      this.setState({ contacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  isUniqueName = ({ name }) => {\r\n    return !this.state.contacts.some((el) => el.name === name);\r\n  };\r\n\r\n  handleSubmit = (contact) => {\r\n    if (this.isUniqueName(contact)) {\r\n      const newContact = { id: uniqid(), ...contact };\r\n\r\n      this.setState((state) => ({\r\n        contacts: [...state.contacts, newContact],\r\n      }));\r\n    } else {\r\n      this.setState((state) => ({ isAlertShow: !state.isAlertShow }));\r\n\r\n      setTimeout(() => {\r\n        this.setState((state) => ({ isAlertShow: !state.isAlertShow }));\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState((state) => ({\r\n      contacts: state.contacts.filter((el) => el.id !== id),\r\n    }));\r\n  };\r\n\r\n  filterContactsByName = (contacts, filter) => {\r\n    const filtred = contacts.filter((el) =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n\r\n    return this.sortContactsAlphabetically(filtred);\r\n  };\r\n\r\n  sortContactsAlphabetically = (contacts) => {\r\n    const sortedArr = [...contacts];\r\n\r\n    return sortedArr.sort((a, b) => {\r\n      if (a.name < b.name) return -1;\r\n      if (a.name < b.name) return 1;\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter, isAlertShow, isLogoShow } = this.state;\r\n    const filtredContacts = this.filterContactsByName(contacts, filter);\r\n    const sortedContacts = this.sortContactsAlphabetically(contacts);\r\n\r\n    return (\r\n      <div>\r\n        <div className={style.logoWrap}>\r\n          <CSSTransition\r\n            in={isLogoShow}\r\n            timeout={500}\r\n            classNames={logoTransition}\r\n          >\r\n            <h2 className={style.logo}>Phonebook</h2>\r\n          </CSSTransition>\r\n        </div>\r\n\r\n        <ContactForm onAddContact={this.handleSubmit} />\r\n\r\n        <h2 className={style.title}>Contacts</h2>\r\n\r\n        <Filter\r\n          onFilter={this.handleFilter}\r\n          value={filter}\r\n          isShow={contacts.length >= 2}\r\n        />\r\n\r\n        <ContactList\r\n          contacts={filter.length ? filtredContacts : sortedContacts}\r\n          onDelete={this.handleDelete}\r\n        />\r\n\r\n        <Notification isShow={isAlertShow} text=\"Contact is already exist\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport Phonebook from \"./components/Phonebook/Phonebook\";\r\n\r\nconst App = () => <Phonebook />;\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}